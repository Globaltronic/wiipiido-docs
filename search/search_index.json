{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the documentation for the WiiPiiDo . Warning This documentation is still a Work-in-Progress, some critical information may still be missing. If there is some information that you would like to be added, please fill a issue here . What is the WiiPiiDo? The WiiPiiDo is a compact and high-performance single-board computer. Board Layout Pinout The WiiPiiDo has 3 headers, label as 11 , 12 and 13 in the board layout. The pinout for these headers is the following: Header Pin out Main Header (RPI-Compatible) (label 11) Header 2 (label 12) Header 3 (label 13) Contact For more information, please contact us directly by phone at (+351) 234 612 687 , or send an email to geral@globaltronic.pt .","title":"Home"},{"location":"#what-is-the-wiipiido","text":"The WiiPiiDo is a compact and high-performance single-board computer.","title":"What is the WiiPiiDo?"},{"location":"#board-layout","text":"","title":"Board Layout"},{"location":"#pinout","text":"The WiiPiiDo has 3 headers, label as 11 , 12 and 13 in the board layout. The pinout for these headers is the following: Header Pin out Main Header (RPI-Compatible) (label 11) Header 2 (label 12) Header 3 (label 13)","title":"Pinout"},{"location":"#contact","text":"For more information, please contact us directly by phone at (+351) 234 612 687 , or send an email to geral@globaltronic.pt .","title":"Contact"},{"location":"armbian/","text":"Activate/Deactivate the Desktop Environment To activate and deactivate the desktop environment that comes by default, you can simply enable/disable the display manager that is being used, which in this case is LightDM . To do this, you can run the following commands in the console. # Enable the desktop environment systemctl enable lightdm.service systemctl start lightdm.service # Disable the desktop environment systemctl stop lightdm.service systemctl disable lightdm.service After rebooting the board, the desktop environment will be active/inactive.","title":"Armbian"},{"location":"armbian/#activatedeactivate-the-desktop-environment","text":"To activate and deactivate the desktop environment that comes by default, you can simply enable/disable the display manager that is being used, which in this case is LightDM . To do this, you can run the following commands in the console. # Enable the desktop environment systemctl enable lightdm.service systemctl start lightdm.service # Disable the desktop environment systemctl stop lightdm.service systemctl disable lightdm.service After rebooting the board, the desktop environment will be active/inactive.","title":"Activate/Deactivate the Desktop Environment"},{"location":"getting-started/","text":"The WiiPiiDo comes by default deployed with an Armbian image, that was customized to fully support all of the WiiPiiDo components. Through Armbian, the WiiPiiDo can be used either as a desktop-alike computer, or as a server. This way, it is possible to use the WiiPiiDo in the following ways: Using the console through the serial port Using the console through SSH Using a desktop environment through HDMI Note Independently of the method used to use the board, the login credentials are: username: pi password: wiipiido Connect through the Serial Interface To connect to the console using the serial interface, you need to have a USB to Serial connector, by connecting it from the host PC's USB port to the WiiPiiDo's Serial connection highlighted in the following image: The WiiPiiDo baud rate is set to 115200 , so, once connected to Linux machine, you can use for example the picocom program to open the serial console: $ picocom -b 115200 <serial_port> Info The <serial_port> is the port being used by the USB to Serial connector. You can check this by, after connecting the connector to the PC, using the command dmseg and see in which port the device was connected. In this example, we can see that a port was connected to the ttyUSB0 port. As such, in this case, the picocom command would be picocom -b 115200 /dev/ttyUSB0 . In Windows, Putty can be used for this effect as well. In this case, make sure that you are using Serial as the Connection type . Once the Serial line and Speed are with the correct values, you can start the serial connection by clicking in the Open button. Connect through SSH To connect to the WiiPiiDo through SSH you first need to know its IP address. This can be found by either using a network scanner program, like Fing , or by configuring the WiiPiiDo to have a static and known IP, when connected to it using the serial connection or using the HDMI output. When the IP address is known, you can login to the WiiPiiDo, in a Linux machine by using the following command ssh pi@<wiipiido_ip_address> . Alternately, in Windows, you can, for example, use once again use Putty . This time, make sure that you are using SSH as the Connection type , and that the port is 22 . Connect with HDMI To use the WiiPiiDo with a desktop environment, you need to connect use the HDMI output ( label 6 in the board layout ).","title":"Getting Started"},{"location":"getting-started/#connect-through-the-serial-interface","text":"To connect to the console using the serial interface, you need to have a USB to Serial connector, by connecting it from the host PC's USB port to the WiiPiiDo's Serial connection highlighted in the following image: The WiiPiiDo baud rate is set to 115200 , so, once connected to Linux machine, you can use for example the picocom program to open the serial console: $ picocom -b 115200 <serial_port> Info The <serial_port> is the port being used by the USB to Serial connector. You can check this by, after connecting the connector to the PC, using the command dmseg and see in which port the device was connected. In this example, we can see that a port was connected to the ttyUSB0 port. As such, in this case, the picocom command would be picocom -b 115200 /dev/ttyUSB0 . In Windows, Putty can be used for this effect as well. In this case, make sure that you are using Serial as the Connection type . Once the Serial line and Speed are with the correct values, you can start the serial connection by clicking in the Open button.","title":"Connect through the Serial Interface"},{"location":"getting-started/#connect-through-ssh","text":"To connect to the WiiPiiDo through SSH you first need to know its IP address. This can be found by either using a network scanner program, like Fing , or by configuring the WiiPiiDo to have a static and known IP, when connected to it using the serial connection or using the HDMI output. When the IP address is known, you can login to the WiiPiiDo, in a Linux machine by using the following command ssh pi@<wiipiido_ip_address> . Alternately, in Windows, you can, for example, use once again use Putty . This time, make sure that you are using SSH as the Connection type , and that the port is 22 .","title":"Connect through SSH"},{"location":"getting-started/#connect-with-hdmi","text":"To use the WiiPiiDo with a desktop environment, you need to connect use the HDMI output ( label 6 in the board layout ).","title":"Connect with HDMI"},{"location":"peripheral-examples/","text":"In this section there are examples on how to utilize some of the components the WiiPiiDo has, through the terminal. Wi-Fi To connect to a new Wi-Fi AP through the terminal, you can use the terminal interfaces provided by the NetworkManager package, which comes installed by default in the Armbian image. This way, we can connect to a new network by using the command nmcli , using a console client, or nmtui , using a terminal user interface. nmtui is easy and intuitive to use, so in this example we will have the commands for using nmcli , to serve has a different perspective. As such, we can first run nmcli radio to check if the Wi-Fi is enabled, the output should be something like the following: [ dedukun@dedu-debian:~ ] $ nmcli radio WIFI-HW WIFI WWAN-HW WWAN enabled disabled enabled enabled","title":"Peripheral examples"},{"location":"peripheral-examples/#wi-fi","text":"To connect to a new Wi-Fi AP through the terminal, you can use the terminal interfaces provided by the NetworkManager package, which comes installed by default in the Armbian image. This way, we can connect to a new network by using the command nmcli , using a console client, or nmtui , using a terminal user interface. nmtui is easy and intuitive to use, so in this example we will have the commands for using nmcli , to serve has a different perspective. As such, we can first run nmcli radio to check if the Wi-Fi is enabled, the output should be something like the following: [ dedukun@dedu-debian:~ ] $ nmcli radio WIFI-HW WIFI WWAN-HW WWAN enabled disabled enabled enabled","title":"Wi-Fi"},{"location":"yocto/","text":"The WiiPiiDo has support for Yocto , we created an BSP Layer, which can be found at . Warning The Yocto support is still in it's early states, if you are not familiar with Yocto, or want something more stable, we recommend you to use the Armbian image .","title":"Yocto"}]}